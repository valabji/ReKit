{"version":3,"sources":["constants/Colors.js","components/TabBarIcon.js","screens/HomeScreen.js","screens/Screen2.js","screens/Screen3.js","navigation/BottomTabNavigator.js","screens/LoginScreen.js","App.js","navigation/useLinking.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","HomeScreen","View","flex","alignItems","justifyContent","Text","fontSize","marginTop","LinksScreen","Screen3","navigationOptions","header","BottomTab","createBottomTabNavigator","BottomTabNavigator","navigation","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","title","tabBarIcon","Screen2","state","routes","index","user","pass","Home","TextInput","height","placeholder","onChangeText","text","id","secureTextEntry","Button","onPress","navigate","alert","Stack","createStackNavigator","App","React","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","getInitialState","useLinking","prefixes","Linking","makeUrl","config","Root","path","screens","Links","Settings","a","async","SplashScreen","preventAutoHide","Font","font","require","console","warn","hide","skipLoadingScreen","styles","container","Platform","OS","StatusBar","barStyle","NavigationContainer","ref","initialState","LoginScreen","headerStyle","backgroundColor","StyleSheet","create","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","module","exports"],"mappings":"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","file":"static/js/app.2aca7701.chunk.js","sourcesContent":["const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import * as React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import * as React from 'react';\nimport {Text, View } from 'react-native';\n\n\nexport default function HomeScreen() {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    <Text style={{ fontSize:24, marginBottom:10,marginTop:20}}>Welcome To Home Screen</Text>\n    </View>\n  );\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n","import * as React from 'react';\nimport { Text, View } from 'react-native';\nexport default function LinksScreen() {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    <Text style={{ fontSize:24, marginBottom:10,marginTop:20}}>Welcome To Second Screen</Text>\n    </View>\n  );\n}","import * as React from 'react';\nimport { Text, View } from 'react-native';\nexport default function Screen3() {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    <Text style={{ fontSize:24, marginBottom:10,marginTop:20}}>Welcome To Third Screen</Text>\n    </View>\n  );\n}","import * as React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport Screen2 from '../screens/Screen2';\nimport Screen3 from '../screens/Screen3';\n\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          title: 'Home',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-code-working\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Sc2\"\n        component={Screen2}\n        options={{\n          title: 'Screen2',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Sc3\"\n        component={Screen3}\n        options={{\n          title: 'Screen3',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'Home Page';\n    case 'Sc2':\n      return 'Page 2';\n    case 'Sc3':\n      return 'Page 3';\n  }\n}\n","import * as React from 'react';\nimport { Button, View, Text, TextInput } from 'react-native';\n//import { TextInput } from 'react-native-gesture-handler';\n\nvar user = \"\";\nvar pass = \"\";\nexport default function Home({ navigation }) {\n    return (\n      <View>\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text style={{ fontSize:24, marginBottom:10,marginTop:20}}>ReKit Login</Text>\n        <TextInput\n          style={{ height: 40 }}\n          placeholder=\"Username\"\n          onChangeText={text => user=text}\n        />\n        <TextInput\n          style={{ height: 40 }}\n          placeholder=\"Password\"\n          id=\"passwd\"\n          secureTextEntry={true}\n          onChangeText={text => pass=text}\n        />\n          <Button style={{height:40}} onPress={() => { \n                  if(pass==\"1234\"){\n                      navigation.navigate('BotNav')\n                  }else{\n                      alert(\"Wrong password for user \"+user)\n                  }\n          }} title=\"Login\" />\n      </View>\n      </View>      \n    );\n  }\n  ","import * as React from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { SplashScreen } from 'expo';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport LoginScreen from './screens/LoginScreen'\nimport useLinking from './navigation/useLinking';\n\nconst Stack = createStackNavigator();\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(containerRef);\n\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n        setInitialNavigationState(await getInitialState());\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <NavigationContainer ref={containerRef} initialState={initialNavigationState}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={LoginScreen} options={{title:\"Delivery / Login\",headerStyle:{backgroundColor:\"#eee\"}}} />\n            <Stack.Screen name=\"BotNav\" component={BottomTabNavigator} options={{title:\"Main Screen\",headerStyle:{backgroundColor:\"#aaf\"}}}/>\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","import { useLinking } from '@react-navigation/native';\nimport { Linking } from 'expo';\n\nexport default function(containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl('/')],\n    config: {\n      Root: {\n        path: 'root',\n        screens: {\n          Home: 'home',\n          Links: 'links',\n          Settings: 'settings',\n        },\n      },\n    },\n  });\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}
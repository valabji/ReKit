{"ast":null,"code":"function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import React from'react';import View from\"react-native-web/dist/exports/View\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useTheme}from'@react-navigation/native';import Color from'color';import TabBarIcon from\"./TabBarIcon\";export default function BottomTabBarItem(_ref2){var focused=_ref2.focused,route=_ref2.route,label=_ref2.label,icon=_ref2.icon,_ref2$button=_ref2.button,button=_ref2$button===void 0?function(_ref){var children=_ref.children,style=_ref.style,rest=_objectWithoutProperties(_ref,[\"children\",\"style\"]);return React.createElement(TouchableWithoutFeedback,rest,React.createElement(View,{style:style},children));}:_ref2$button,accessibilityLabel=_ref2.accessibilityLabel,testID=_ref2.testID,onPress=_ref2.onPress,onLongPress=_ref2.onLongPress,horizontal=_ref2.horizontal,customActiveTintColor=_ref2.activeTintColor,customInactiveTintColor=_ref2.inactiveTintColor,_ref2$activeBackgroun=_ref2.activeBackgroundColor,activeBackgroundColor=_ref2$activeBackgroun===void 0?'transparent':_ref2$activeBackgroun,_ref2$inactiveBackgro=_ref2.inactiveBackgroundColor,inactiveBackgroundColor=_ref2$inactiveBackgro===void 0?'transparent':_ref2$inactiveBackgro,_ref2$showLabel=_ref2.showLabel,showLabel=_ref2$showLabel===void 0?true:_ref2$showLabel,_ref2$showIcon=_ref2.showIcon,showIcon=_ref2$showIcon===void 0?true:_ref2$showIcon,allowFontScaling=_ref2.allowFontScaling,labelStyle=_ref2.labelStyle,style=_ref2.style;var _useTheme=useTheme(),colors=_useTheme.colors;var activeTintColor=customActiveTintColor===undefined?colors.primary:customActiveTintColor;var inactiveTintColor=customInactiveTintColor===undefined?Color(colors.text).mix(Color(colors.card),0.5).hex():customInactiveTintColor;var renderLabel=function renderLabel(_ref3){var focused=_ref3.focused;if(showLabel===false){return null;}var color=focused?activeTintColor:inactiveTintColor;if(typeof label==='string'){return React.createElement(Animated.Text,{numberOfLines:1,style:[styles.label,{color:color},showIcon&&horizontal?styles.labelBeside:styles.labelBeneath,labelStyle],allowFontScaling:allowFontScaling},label);}if(typeof label==='string'){return label;}return label({focused:focused,color:color});};var renderIcon=function renderIcon(_ref4){var focused=_ref4.focused;if(showIcon===false||icon===undefined){return null;}var activeOpacity=focused?1:0;var inactiveOpacity=focused?0:1;return React.createElement(TabBarIcon,{route:route,size:horizontal?17:24,activeOpacity:activeOpacity,inactiveOpacity:inactiveOpacity,activeTintColor:activeTintColor,inactiveTintColor:inactiveTintColor,renderIcon:icon,style:horizontal?styles.iconHorizontal:styles.iconVertical});};var scene={route:route,focused:focused};var backgroundColor=focused?activeBackgroundColor:inactiveBackgroundColor;return button({onPress:onPress,onLongPress:onLongPress,testID:testID,accessibilityLabel:accessibilityLabel,accessibilityRole:'button',accessibilityStates:focused?['selected']:[],style:[styles.tab,{backgroundColor:backgroundColor},horizontal?styles.tabLandscape:styles.tabPortrait,style],children:React.createElement(React.Fragment,null,renderIcon(scene),renderLabel(scene))});}var styles=StyleSheet.create({tab:{flex:1,alignItems:'center'},tabPortrait:{justifyContent:'flex-end',flexDirection:'column'},tabLandscape:{justifyContent:'center',flexDirection:'row'},iconVertical:{flex:1},iconHorizontal:{height:'100%'},label:{textAlign:'center',backgroundColor:'transparent'},labelBeneath:{fontSize:11,marginBottom:1.5},labelBeside:{fontSize:12,marginLeft:20}});","map":{"version":3,"sources":["BottomTabItem.tsx"],"names":["button","style","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","showIcon","colors","useTheme","customActiveTintColor","customInactiveTintColor","Color","renderLabel","focused","color","styles","allowFontScaling","label","renderIcon","icon","activeOpacity","inactiveOpacity","horizontal","iconVertical","scene","route","backgroundColor","onPress","onLongPress","testID","accessibilityLabel","accessibilityRole","accessibilityStates","children","tab","flex","alignItems","tabPortrait","justifyContent","flexDirection","tabLandscape","iconHorizontal","height","textAlign","labelBeneath","fontSize","marginBottom","labelBeside","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  TouchableWithoutFeedback,\n  Animated,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\n\nimport TabBarIcon from './TabBarIcon';\nimport { BottomTabBarButtonProps } from '../types';\n\ntype Props = {\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: { focused: boolean; color: string }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * The button for the tab. Uses a `TouchableWithoutFeedback` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: () => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to show the icon for the tab.\n   */\n  showIcon?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  label,\n  icon,\n  button = ({ children, style, ...rest }: BottomTabBarButtonProps) => (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  ),\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  showIcon = true,\n  allowFontScaling,\n  labelStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            showIcon && horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'string') {\n      return label;\n    }\n\n    return label({ focused, color });\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (showIcon === false || icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        size={horizontal ? 17 : 24}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={horizontal ? styles.iconHorizontal : styles.iconVertical}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    accessibilityRole: 'button',\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/valabji/Desktop/React/ReKit/screens/Lg1.js\";\nimport { Feather } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useState, useCallback } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nvar COLORS = {\n  WHITE: '#FFF',\n  BLACK: '#000',\n  BLUE: '#ddd',\n  PURPLE: '#FFF'\n};\nvar SIZES = {\n  BASE: 6,\n  FONT: 12,\n  TITLE: 20,\n  PADDING: 12\n};\nvar API_URL = 'http://5e08ac18434a370014168b98.mockapi.io/api/v1';\n\nvar timeout = function timeout(ms) {\n  return new Promise(function (response) {\n    return setTimeout(response, ms);\n  });\n};\n\nexport default (function () {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState('contact@react-ui-kit.com'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showPassword = _useState8[0],\n      setShowPassword = _useState8[1];\n\n  var handleLogin = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(timeout(2000));\n\n          case 3:\n            fetch(API_URL + \"/login\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (result) {\n              alert(\"Login token: \" + (result == null ? void 0 : result.token));\n            }).catch(function (error) {\n              return alert(\"Login error: \" + error);\n            });\n            setLoading(false);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n\n  var renderInputs = function renderInputs() {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.inputContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, React.createElement(TextInput, {\n      value: email,\n      placeholder: \"Email\",\n      style: styles.input,\n      selectionColor: COLORS.WHITE,\n      placeholderTextColor: COLORS.WHITE,\n      onChangeText: function onChangeText(value) {\n        return setEmail(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })), React.createElement(View, {\n      style: styles.inputContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, React.createElement(TextInput, {\n      value: password,\n      style: styles.input,\n      placeholder: \"Password\",\n      selectionColor: COLORS.WHITE,\n      placeholderTextColor: COLORS.WHITE,\n      secureTextEntry: !showPassword,\n      onChangeText: function onChangeText(value) {\n        return setPassword(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: {\n        right: 0,\n        top: SIZES.BASE,\n        position: 'absolute'\n      },\n      onPress: function onPress() {\n        return setShowPassword(!showPassword);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, React.createElement(Feather, {\n      color: COLORS.WHITE,\n      size: SIZES.FONT * 1.3,\n      name: !showPassword ? 'eye' : 'eye-off',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert(\"Go to 'Forgot Password' screen\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'right',\n        fontWeight: '300',\n        color: COLORS.WHITE,\n        fontSize: SIZES.BASE * 1.6,\n        paddingBottom: SIZES.PADDING * 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Forgot your password?\")), React.createElement(TouchableOpacity, {\n      activeOpacity: 0.8,\n      style: styles.signin,\n      onPress: function onPress() {\n        return handleLogin();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, loading ? React.createElement(ActivityIndicator, {\n      size: SIZES.FONT * 1.2,\n      color: COLORS.PURPLE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }) : React.createElement(Text, {\n      style: styles.signinLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Sign in\")));\n  };\n\n  return React.createElement(LinearGradient, {\n    style: {\n      flex: 1\n    },\n    end: {\n      x: 1,\n      y: 0.7\n    },\n    start: {\n      x: 0,\n      y: 0\n    },\n    colors: [COLORS.BLUE, COLORS.PURPLE],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 0.5,\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Sign in\")), renderInputs())));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: SIZES.BASE * 4\n  },\n  input: {\n    borderBottomColor: COLORS.WHITE,\n    borderColor: 'transparent',\n    borderWidth: StyleSheet.hairlineWidth,\n    color: COLORS.WHITE,\n    fontSize: SIZES.FONT,\n    paddingVertical: SIZES.PADDING * 0.5\n  },\n  inputContainer: {\n    marginBottom: SIZES.PADDING * 2\n  },\n  signin: {\n    backgroundColor: COLORS.WHITE,\n    borderRadius: SIZES.BASE * 5,\n    paddingVertical: SIZES.PADDING,\n    textAlign: 'center'\n  },\n  signinLabel: {\n    color: COLORS.PURPLE,\n    fontSize: SIZES.FONT,\n    fontWeight: '600',\n    letterSpacing: 0.5,\n    textAlign: 'center'\n  },\n  title: {\n    color: COLORS.WHITE,\n    fontSize: SIZES.TITLE,\n    fontWeight: '600',\n    letterSpacing: 1,\n    marginBottom: SIZES.BASE\n  }\n});","map":{"version":3,"sources":["/Users/valabji/Desktop/React/ReKit/screens/Lg1.js"],"names":["Feather","LinearGradient","React","useState","useCallback","COLORS","WHITE","BLACK","BLUE","PURPLE","SIZES","BASE","FONT","TITLE","PADDING","API_URL","timeout","ms","Promise","response","setTimeout","loading","setLoading","email","setEmail","password","setPassword","showPassword","setShowPassword","handleLogin","fetch","method","headers","body","JSON","stringify","then","json","result","alert","token","catch","error","renderInputs","flex","styles","inputContainer","input","value","right","top","position","textAlign","fontWeight","color","fontSize","paddingBottom","signin","signinLabel","x","y","container","justifyContent","title","StyleSheet","create","padding","borderBottomColor","borderColor","borderWidth","hairlineWidth","paddingVertical","marginBottom","backgroundColor","borderRadius","letterSpacing"],"mappings":"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","sourcesContent":["import { Feather } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useState, useCallback } from 'react';\nimport {\n  Text,\n  TextInput,\n  StyleSheet,\n  View,\n  SafeAreaView,\n  TouchableOpacity,\n  ActivityIndicator,\n  KeyboardAvoidingView,\n} from 'react-native';\n\nconst COLORS = {\n  WHITE: '#FFF',\n  BLACK: '#000',\n  BLUE: '#ddd',\n  PURPLE: '#FFF',\n};\n\nconst SIZES = {\n  BASE: 6,\n  FONT: 12,\n  TITLE: 20,\n  PADDING: 12,\n};\n\nconst API_URL = 'http://5e08ac18434a370014168b98.mockapi.io/api/v1';\nconst timeout = ms => new Promise(response => setTimeout(response, ms));\n\nexport default () => {\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState('contact@react-ui-kit.com');\n  const [password, setPassword] = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleLogin = useCallback(async () => {\n    setLoading(true);\n\n    await timeout(2000);\n    fetch(`${API_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then(response => response.json())\n      .then(result => {\n        // do something with the result token\n        alert(`Login token: ${result?.token}`);\n      })\n      .catch(error => alert(`Login error: ${error}`));\n\n    setLoading(false);\n  });\n\n  const renderInputs = () => {\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={styles.inputContainer}>\n          <TextInput\n            value={email}\n            placeholder=\"Email\"\n            style={styles.input}\n            selectionColor={COLORS.WHITE}\n            placeholderTextColor={COLORS.WHITE}\n            onChangeText={value => setEmail(value)}\n          />\n        </View>\n        <View style={styles.inputContainer}>\n          <TextInput\n            value={password}\n            style={styles.input}\n            placeholder=\"Password\"\n            selectionColor={COLORS.WHITE}\n            placeholderTextColor={COLORS.WHITE}\n            secureTextEntry={!showPassword}\n            onChangeText={value => setPassword(value)}\n          />\n          <TouchableOpacity\n            style={{\n              right: 0,\n              top: SIZES.BASE,\n              position: 'absolute',\n            }}\n            onPress={() => setShowPassword(!showPassword)}>\n            <Feather\n              color={COLORS.WHITE}\n              size={SIZES.FONT * 1.3}\n              name={!showPassword ? 'eye' : 'eye-off'}\n            />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity onPress={() => alert(\"Go to 'Forgot Password' screen\")}>\n          <Text\n            style={{\n              textAlign: 'right',\n              fontWeight: '300',\n              color: COLORS.WHITE,\n              fontSize: SIZES.BASE * 1.6,\n              paddingBottom: SIZES.PADDING * 2,\n            }}>\n            Forgot your password?\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity activeOpacity={0.8} style={styles.signin} onPress={() => handleLogin()}>\n          {loading ? (\n            <ActivityIndicator size={SIZES.FONT * 1.2} color={COLORS.PURPLE} />\n          ) : (\n            <Text style={styles.signinLabel}>Sign in</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  return (\n    <LinearGradient\n      style={{ flex: 1 }}\n      end={{ x: 1, y: 0.7 }}\n      start={{ x: 0, y: 0 }}\n      colors={[COLORS.BLUE, COLORS.PURPLE]}>\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView style={styles.container}>\n          <View style={{ flex: 0.5, justifyContent: 'center' }}>\n            <Text style={styles.title}>Sign in</Text>\n          </View>\n          {renderInputs()}\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    </LinearGradient>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: SIZES.BASE * 4,\n  },\n  input: {\n    borderBottomColor: COLORS.WHITE,\n    borderColor: 'transparent',\n    borderWidth: StyleSheet.hairlineWidth,\n    color: COLORS.WHITE,\n    fontSize: SIZES.FONT,\n    paddingVertical: SIZES.PADDING * 0.5,\n  },\n  inputContainer: {\n    marginBottom: SIZES.PADDING * 2,\n  },\n  signin: {\n    backgroundColor: COLORS.WHITE,\n    borderRadius: SIZES.BASE * 5,\n    paddingVertical: SIZES.PADDING,\n    textAlign: 'center',\n  },\n  signinLabel: {\n    color: COLORS.PURPLE,\n    fontSize: SIZES.FONT,\n    fontWeight: '600',\n    letterSpacing: 0.5,\n    textAlign: 'center',\n  },\n  title: {\n    color: COLORS.WHITE,\n    fontSize: SIZES.TITLE,\n    fontWeight: '600',\n    letterSpacing: 1,\n    marginBottom: SIZES.BASE,\n  },\n});"]},"metadata":{},"sourceType":"module"}
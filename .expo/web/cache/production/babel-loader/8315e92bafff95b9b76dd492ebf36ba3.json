{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationRouteContext from\"./NavigationRouteContext\";export default function useOnGetState(_ref){var getStateForRoute=_ref.getStateForRoute,getState=_ref.getState;var _React$useContext=React.useContext(NavigationBuilderContext),addStateGetter=_React$useContext.addStateGetter;var route=React.useContext(NavigationRouteContext);var key=route?route.key:'root';var getRehydratedState=React.useCallback(function(){var state=getState();return _objectSpread({},state,{routes:state.routes.map(function(route){return _objectSpread({},route,{state:getStateForRoute(route.key)});})});},[getState,getStateForRoute]);React.useEffect(function(){return addStateGetter===null||addStateGetter===void 0?void 0:addStateGetter(key,getRehydratedState);},[addStateGetter,getRehydratedState,key]);}","map":{"version":3,"sources":["useOnGetState.tsx"],"names":["getState","addStateGetter","React","route","key","getRehydratedState","state","routes","getStateForRoute"],"mappings":"k9BAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAEA,MAAA,CAAA,wBAAA,kCACA,MAAA,CAAA,sBAAA,gCAEA,cAAe,SAAA,CAAA,aAAA,MAMZ,IANmC,CAAA,gBAMnC,MANmC,gBAMnC,CAJDA,QAIC,MAJDA,QAIC,uBAC0BE,KAAK,CAALA,UAAAA,CAA3B,wBAA2BA,CAD1B,CACOD,cADP,mBACOA,cADP,CAED,GAAME,CAAAA,KAAK,CAAGD,KAAK,CAALA,UAAAA,CAAd,sBAAcA,CAAd,CACA,GAAME,CAAAA,GAAG,CAAGD,KAAK,CAAGA,KAAK,CAAR,GAAA,CAAjB,MAAA,CAEA,GAAME,CAAAA,kBAAkB,CAAG,KAAK,CAAL,WAAA,CAAkB,UAAM,CACjD,GAAMC,CAAAA,KAAK,CAAGN,QAAd,EAAA,CACA,MAAA,CAAA,aAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAEEO,MAAM,CAAE,KAAK,CAAL,MAAA,CAAA,GAAA,CAAkBJ,SAAAA,KAAD,QAAA,CAAA,aAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAEvBG,KAAK,CAAEE,gBAAgB,CAACL,KAAK,CAAN,GAAA,CAFA,CAAA,CAAA,EAAjB,CAFV,CAAA,CAAA,CAFyB,CAAA,CASxB,CAAA,QAAA,CATH,gBASG,CATwB,CAA3B,CAWAD,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,MAAOD,CAAAA,cAAP,GAAA,IAAOA,EAAAA,cAAP,GAAA,IAAA,EAAOA,CAAP,IAAA,EAAOA,CAAAA,cAAc,CAAA,GAAA,CAArB,kBAAqB,CAArB,CADFC,CAAAA,CAEG,CAAA,cAAA,CAAA,kBAAA,CAFHA,GAEG,CAFHA,EAGD","sourcesContent":["import * as React from 'react';\nimport { NavigationState } from '@react-navigation/routers';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\n\nexport default function useOnGetState({\n  getStateForRoute,\n  getState,\n}: {\n  getStateForRoute: (routeName: string) => NavigationState | undefined;\n  getState: () => NavigationState;\n}) {\n  const { addStateGetter } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n    return {\n      ...state,\n      routes: state.routes.map((route) => ({\n        ...route,\n        state: getStateForRoute(route.key),\n      })),\n    };\n  }, [getState, getStateForRoute]);\n\n  React.useEffect(() => {\n    return addStateGetter?.(key, getRehydratedState);\n  }, [addStateGetter, getRehydratedState, key]);\n}\n"]},"metadata":{},"sourceType":"module"}
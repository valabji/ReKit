{"ast":null,"code":"import*as React from'react';export default function useDevTools(_ref){var name=_ref.name,reset=_ref.reset,state=_ref.state,enabled=_ref.enabled;var devToolsRef=React.useRef();if(enabled&&process.env.NODE_ENV!=='production'&&global.__REDUX_DEVTOOLS_EXTENSION__&&devToolsRef.current===undefined){devToolsRef.current=global.__REDUX_DEVTOOLS_EXTENSION__.connect({name:name});}var devTools=devToolsRef.current;var lastStateRef=React.useRef(state);var actions=React.useRef([]);React.useEffect(function(){devTools===null||devTools===void 0?void 0:devTools.init(lastStateRef.current);},[devTools]);React.useEffect(function(){return devTools===null||devTools===void 0?void 0:devTools.subscribe(function(message){if(message.type==='DISPATCH'&&message.state){reset(JSON.parse(message.state));}});},[devTools,reset]);var trackState=React.useCallback(function(getState){if(!devTools){return;}while(actions.current.length>1){devTools.send(actions.current.shift(),lastStateRef.current);}var state=getState();if(actions.current.length){devTools.send(actions.current.pop(),state);}else{devTools.send('@@UNKNOWN',state);}lastStateRef.current=state;},[devTools]);var trackAction=React.useCallback(function(action){if(!devTools){return;}actions.current.push(action);},[devTools]);return{trackAction:trackAction,trackState:trackState};}","map":{"version":3,"sources":["useDevTools.tsx"],"names":["enabled","devToolsRef","React","process","global","name","devTools","lastStateRef","actions","message","reset","JSON","trackState","getState","state","trackAction","action"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAsCA,cAAe,SAAA,CAAA,WAAA,MAA+D,IAA1C,CAAA,IAA0C,MAA1C,IAA0C,CAA1C,KAA0C,MAA1C,KAA0C,CAA1C,KAA0C,MAA1C,KAA0C,CAApBA,OAAoB,MAApBA,OAAoB,CAC5E,GAAMC,CAAAA,WAAW,CAAGC,KAAK,CAAzB,MAAoBA,EAApB,CAEA,GACEF,OAAO,EACPG,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,GADAH,YAAAA,EAEAI,MAAM,CAFNJ,4BAAAA,EAGAC,WAAW,CAAXA,OAAAA,GAJF,SAAA,CAKE,CACAA,WAAW,CAAXA,OAAAA,CAAsB,MAAM,CAAN,4BAAA,CAAA,OAAA,CAA4C,CAAEI,IAAAA,CAAAA,IAAF,CAA5C,CAAtBJ,CACD,CAED,GAAMK,CAAAA,QAAQ,CAAGL,WAAW,CAA5B,OAAA,CACA,GAAMM,CAAAA,YAAY,CAAGL,KAAK,CAALA,MAAAA,CAArB,KAAqBA,CAArB,CACA,GAAMM,CAAAA,OAAO,CAAGN,KAAK,CAALA,MAAAA,CAAhB,EAAgBA,CAAhB,CAEAA,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpBI,QAAQ,GAARA,IAAAA,EAAAA,QAAQ,GAAA,IAARA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,QAAQ,CAARA,IAAAA,CAAeC,YAAY,CAA3BD,OAAAA,CAAAA,CADFJ,CAAAA,CAEG,CAFHA,QAEG,CAFHA,EAIAA,KAAK,CAALA,SAAAA,CACE,iBACE,CAAA,QADF,GAAA,IACE,EAAA,QADF,GAAA,IAAA,EACE,CADF,IAAA,EACE,CAAA,QAAQ,CAAR,SAAA,CAAqBO,SAAAA,OAAD,CAAa,CAC/B,GAAIA,OAAO,CAAPA,IAAAA,GAAAA,UAAAA,EAA+BA,OAAO,CAA1C,KAAA,CAAkD,CAChDC,KAAK,CAACC,IAAI,CAAJA,KAAAA,CAAWF,OAAO,CAAxBC,KAAMC,CAAD,CAALD,CACD,CALPR,CAEI,CADF,EADFA,CAOE,CAAA,QAAA,CAPFA,KAOE,CAPFA,EAUA,GAAMU,CAAAA,UAAU,CAAG,KAAK,CAAL,WAAA,CAChBC,SAAAA,QAAD,CAA2B,CACzB,GAAI,CAAJ,QAAA,CAAe,CACb,OACD,CAED,MAAOL,OAAO,CAAPA,OAAAA,CAAAA,MAAAA,CAAP,CAAA,CAAmC,CACjCF,QAAQ,CAARA,IAAAA,CAAcE,OAAO,CAAPA,OAAAA,CAAdF,KAAcE,EAAdF,CAAuCC,YAAY,CAAnDD,OAAAA,EACD,CAED,GAAMQ,CAAAA,KAAK,CAAGD,QAAd,EAAA,CAEA,GAAIL,OAAO,CAAPA,OAAAA,CAAJ,MAAA,CAA4B,CAC1BF,QAAQ,CAARA,IAAAA,CAAcE,OAAO,CAAPA,OAAAA,CAAdF,GAAcE,EAAdF,CAAAA,KAAAA,EADF,CAAA,IAEO,CACLA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAAAA,KAAAA,EACD,CAEDC,YAAY,CAAZA,OAAAA,CAAAA,KAAAA,CAlBe,CAAA,CAoBjB,CApBF,QAoBE,CApBiB,CAAnB,CAuBA,GAAMQ,CAAAA,WAAW,CAAG,KAAK,CAAL,WAAA,CACjBC,SAAAA,MAAD,CAAuC,CACrC,GAAI,CAAJ,QAAA,CAAe,CACb,OACD,CAEDR,OAAO,CAAPA,OAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EANgB,CAAA,CAQlB,CARF,QAQE,CARkB,CAApB,CAWA,MAAO,CACLO,WADK,CACLA,WADK,CAELH,UAAAA,CAAAA,UAFK,CAAP,CAID","sourcesContent":["import * as React from 'react';\nimport {\n  NavigationState,\n  NavigationAction,\n  PartialState,\n} from '@react-navigation/routers';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\ntype Options = {\n  enabled: boolean;\n  name: string;\n  reset: (state: NavigationState) => void;\n  state: State;\n};\n\ntype DevTools = {\n  init(value: any): void;\n  send(action: any, value: any): void;\n  subscribe(\n    listener: (message: { type: string; [key: string]: any }) => void\n  ): () => void;\n};\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace NodeJS {\n    interface Global {\n      __REDUX_DEVTOOLS_EXTENSION__:\n        | {\n            connect(options: { name: string }): DevTools;\n            disconnect(): void;\n          }\n        | undefined;\n    }\n  }\n}\n\nexport default function useDevTools({ name, reset, state, enabled }: Options) {\n  const devToolsRef = React.useRef<DevTools>();\n\n  if (\n    enabled &&\n    process.env.NODE_ENV !== 'production' &&\n    global.__REDUX_DEVTOOLS_EXTENSION__ &&\n    devToolsRef.current === undefined\n  ) {\n    devToolsRef.current = global.__REDUX_DEVTOOLS_EXTENSION__.connect({ name });\n  }\n\n  const devTools = devToolsRef.current;\n  const lastStateRef = React.useRef<State>(state);\n  const actions = React.useRef<(NavigationAction | string)[]>([]);\n\n  React.useEffect(() => {\n    devTools?.init(lastStateRef.current);\n  }, [devTools]);\n\n  React.useEffect(\n    () =>\n      devTools?.subscribe((message) => {\n        if (message.type === 'DISPATCH' && message.state) {\n          reset(JSON.parse(message.state));\n        }\n      }),\n    [devTools, reset]\n  );\n\n  const trackState = React.useCallback(\n    (getState: () => State) => {\n      if (!devTools) {\n        return;\n      }\n\n      while (actions.current.length > 1) {\n        devTools.send(actions.current.shift(), lastStateRef.current);\n      }\n\n      const state = getState();\n\n      if (actions.current.length) {\n        devTools.send(actions.current.pop(), state);\n      } else {\n        devTools.send('@@UNKNOWN', state);\n      }\n\n      lastStateRef.current = state;\n    },\n    [devTools]\n  );\n\n  const trackAction = React.useCallback(\n    (action: NavigationAction | string) => {\n      if (!devTools) {\n        return;\n      }\n\n      actions.current.push(action);\n    },\n    [devTools]\n  );\n\n  return {\n    trackAction,\n    trackState,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
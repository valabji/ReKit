{"ast":null,"code":"import*as React from'react';export default function useStateGetters(){var stateGetters=React.useRef({});var getStateForRoute=React.useCallback(function(routeKey){return stateGetters.current[routeKey]===undefined?undefined:stateGetters.current[routeKey]();},[stateGetters]);var addStateGetter=React.useCallback(function(key,getter){stateGetters.current[key]=getter;return function(){stateGetters.current[key]=undefined;};},[]);return{getStateForRoute:getStateForRoute,addStateGetter:addStateGetter};}","map":{"version":3,"sources":["useStateGetters.tsx"],"names":["stateGetters","React","getStateForRoute","routeKey","addStateGetter"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAOA,cAAe,SAAA,CAAA,eAAA,EAA2B,CACxC,GAAMA,CAAAA,YAAY,CAAGC,KAAK,CAALA,MAAAA,CAArB,EAAqBA,CAArB,CAEA,GAAMC,CAAAA,gBAAgB,CAAGD,KAAK,CAALA,WAAAA,CACtBE,SAAAA,QAAD,QACEH,CAAAA,YAAY,CAAZA,OAAAA,CAAAA,QAAAA,IAAAA,SAAAA,CAAAA,SAAAA,CAEIA,YAAY,CAAZA,OAAAA,CAJiBC,QAIjBD,GAHN,EADuBC,CAKvB,CALF,YAKE,CALuBA,CAAzB,CAQA,GAAMG,CAAAA,cAAc,CAAG,KAAK,CAAL,WAAA,CACrB,SAAA,GAAA,CAAA,MAAA,CAA+C,CAC7CJ,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAEA,MAAO,WAAM,CAEXA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,EAAAA,SAAAA,CAFF,CAAA,CAJmB,CAAA,CAAvB,EAAuB,CAAvB,CAYA,MAAO,CACLE,gBADK,CACLA,gBADK,CAELE,cAAAA,CAAAA,cAFK,CAAP,CAID","sourcesContent":["import * as React from 'react';\nimport { NavigatorStateGetter } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useStateGetters() {\n  const stateGetters = React.useRef<Record<string, NavigatorStateGetter>>({});\n\n  const getStateForRoute = React.useCallback(\n    (routeKey: string) =>\n      stateGetters.current[routeKey] === undefined\n        ? undefined\n        : stateGetters.current[routeKey](),\n    [stateGetters]\n  );\n\n  const addStateGetter = React.useCallback(\n    (key: string, getter: NavigatorStateGetter) => {\n      stateGetters.current[key] = getter;\n\n      return () => {\n        // @ts-ignore\n        stateGetters.current[key] = undefined;\n      };\n    },\n    []\n  );\n\n  return {\n    getStateForRoute,\n    addStateGetter,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}